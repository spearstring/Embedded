
LCD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  00000838  000008ac  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000838  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      0000005c  00000000  00000000  000008ba  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000918  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000078  00000000  00000000  00000958  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   0000100f  00000000  00000000  000009d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 000009cc  00000000  00000000  000019df  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000005d1  00000000  00000000  000023ab  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000d4  00000000  00000000  0000297c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000481  00000000  00000000  00002a50  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    00000625  00000000  00000000  00002ed1  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000070  00000000  00000000  000034f6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e8 e3       	ldi	r30, 0x38	; 56
  a0:	f8 e0       	ldi	r31, 0x08	; 8
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ae 30       	cpi	r26, 0x0E	; 14
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	93 d0       	rcall	.+294    	; 0x1da <main>
  b4:	bf c3       	rjmp	.+1918   	; 0x834 <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <Lcd_Data>:
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  b8:	e5 e6       	ldi	r30, 0x65	; 101
  ba:	f0 e0       	ldi	r31, 0x00	; 0
  bc:	90 81       	ld	r25, Z
  be:	94 60       	ori	r25, 0x04	; 4
  c0:	90 83       	st	Z, r25
  c2:	90 81       	ld	r25, Z
  c4:	9d 7f       	andi	r25, 0xFD	; 253
  c6:	90 83       	st	Z, r25
  c8:	90 81       	ld	r25, Z
  ca:	91 60       	ori	r25, 0x01	; 1
  cc:	90 83       	st	Z, r25
  ce:	90 e1       	ldi	r25, 0x10	; 16
  d0:	9a 95       	dec	r25
  d2:	f1 f7       	brne	.-4      	; 0xd0 <Lcd_Data+0x18>
  d4:	00 c0       	rjmp	.+0      	; 0xd6 <Lcd_Data+0x1e>
  d6:	8b bb       	out	0x1b, r24	; 27
  d8:	80 e1       	ldi	r24, 0x10	; 16
  da:	8a 95       	dec	r24
  dc:	f1 f7       	brne	.-4      	; 0xda <Lcd_Data+0x22>
  de:	00 c0       	rjmp	.+0      	; 0xe0 <Lcd_Data+0x28>
  e0:	80 81       	ld	r24, Z
  e2:	8e 7f       	andi	r24, 0xFE	; 254
  e4:	80 83       	st	Z, r24
  e6:	08 95       	ret

000000e8 <Lcd_Cmd>:
  e8:	e5 e6       	ldi	r30, 0x65	; 101
  ea:	f0 e0       	ldi	r31, 0x00	; 0
  ec:	90 81       	ld	r25, Z
  ee:	9b 7f       	andi	r25, 0xFB	; 251
  f0:	90 83       	st	Z, r25
  f2:	90 81       	ld	r25, Z
  f4:	9d 7f       	andi	r25, 0xFD	; 253
  f6:	90 83       	st	Z, r25
  f8:	90 81       	ld	r25, Z
  fa:	91 60       	ori	r25, 0x01	; 1
  fc:	90 83       	st	Z, r25
  fe:	90 e1       	ldi	r25, 0x10	; 16
 100:	9a 95       	dec	r25
 102:	f1 f7       	brne	.-4      	; 0x100 <Lcd_Cmd+0x18>
 104:	00 c0       	rjmp	.+0      	; 0x106 <Lcd_Cmd+0x1e>
 106:	8b bb       	out	0x1b, r24	; 27
 108:	80 e1       	ldi	r24, 0x10	; 16
 10a:	8a 95       	dec	r24
 10c:	f1 f7       	brne	.-4      	; 0x10a <Lcd_Cmd+0x22>
 10e:	00 c0       	rjmp	.+0      	; 0x110 <Lcd_Cmd+0x28>
 110:	80 81       	ld	r24, Z
 112:	8e 7f       	andi	r24, 0xFE	; 254
 114:	80 83       	st	Z, r24
 116:	08 95       	ret

00000118 <Lcd_CHAR>:
 118:	cf df       	rcall	.-98     	; 0xb8 <Lcd_Data>
 11a:	83 ec       	ldi	r24, 0xC3	; 195
 11c:	99 e0       	ldi	r25, 0x09	; 9
 11e:	01 97       	sbiw	r24, 0x01	; 1
 120:	f1 f7       	brne	.-4      	; 0x11e <Lcd_CHAR+0x6>
 122:	00 c0       	rjmp	.+0      	; 0x124 <Lcd_CHAR+0xc>
 124:	00 00       	nop
 126:	08 95       	ret

00000128 <Lcd_STR>:
 128:	cf 93       	push	r28
 12a:	df 93       	push	r29
 12c:	ec 01       	movw	r28, r24
 12e:	08 c0       	rjmp	.+16     	; 0x140 <Lcd_STR+0x18>
 130:	f3 df       	rcall	.-26     	; 0x118 <Lcd_CHAR>
 132:	21 96       	adiw	r28, 0x01	; 1
 134:	83 ec       	ldi	r24, 0xC3	; 195
 136:	99 e0       	ldi	r25, 0x09	; 9
 138:	01 97       	sbiw	r24, 0x01	; 1
 13a:	f1 f7       	brne	.-4      	; 0x138 <Lcd_STR+0x10>
 13c:	00 c0       	rjmp	.+0      	; 0x13e <Lcd_STR+0x16>
 13e:	00 00       	nop
 140:	88 81       	ld	r24, Y
 142:	81 11       	cpse	r24, r1
 144:	f5 cf       	rjmp	.-22     	; 0x130 <Lcd_STR+0x8>
 146:	83 ec       	ldi	r24, 0xC3	; 195
 148:	99 e0       	ldi	r25, 0x09	; 9
 14a:	01 97       	sbiw	r24, 0x01	; 1
 14c:	f1 f7       	brne	.-4      	; 0x14a <Lcd_STR+0x22>
 14e:	00 c0       	rjmp	.+0      	; 0x150 <Lcd_STR+0x28>
 150:	00 00       	nop
 152:	df 91       	pop	r29
 154:	cf 91       	pop	r28
 156:	08 95       	ret

00000158 <Lcd_Pos>:
 158:	90 e4       	ldi	r25, 0x40	; 64
 15a:	89 9f       	mul	r24, r25
 15c:	60 0d       	add	r22, r0
 15e:	11 24       	eor	r1, r1
 160:	86 2f       	mov	r24, r22
 162:	80 68       	ori	r24, 0x80	; 128
 164:	c1 df       	rcall	.-126    	; 0xe8 <Lcd_Cmd>
 166:	83 ec       	ldi	r24, 0xC3	; 195
 168:	99 e0       	ldi	r25, 0x09	; 9
 16a:	01 97       	sbiw	r24, 0x01	; 1
 16c:	f1 f7       	brne	.-4      	; 0x16a <Lcd_Pos+0x12>
 16e:	00 c0       	rjmp	.+0      	; 0x170 <Lcd_Pos+0x18>
 170:	00 00       	nop
 172:	08 95       	ret

00000174 <Lcd_Clear>:
 174:	81 e0       	ldi	r24, 0x01	; 1
 176:	b8 df       	rcall	.-144    	; 0xe8 <Lcd_Cmd>
 178:	83 ec       	ldi	r24, 0xC3	; 195
 17a:	99 e0       	ldi	r25, 0x09	; 9
 17c:	01 97       	sbiw	r24, 0x01	; 1
 17e:	f1 f7       	brne	.-4      	; 0x17c <Lcd_Clear+0x8>
 180:	00 c0       	rjmp	.+0      	; 0x182 <Lcd_Clear+0xe>
 182:	00 00       	nop
 184:	08 95       	ret

00000186 <Lcd_Init>:
 186:	88 e3       	ldi	r24, 0x38	; 56
 188:	af df       	rcall	.-162    	; 0xe8 <Lcd_Cmd>
 18a:	83 ef       	ldi	r24, 0xF3	; 243
 18c:	91 e0       	ldi	r25, 0x01	; 1
 18e:	01 97       	sbiw	r24, 0x01	; 1
 190:	f1 f7       	brne	.-4      	; 0x18e <Lcd_Init+0x8>
 192:	00 c0       	rjmp	.+0      	; 0x194 <Lcd_Init+0xe>
 194:	00 00       	nop
 196:	88 e3       	ldi	r24, 0x38	; 56
 198:	a7 df       	rcall	.-178    	; 0xe8 <Lcd_Cmd>
 19a:	83 ef       	ldi	r24, 0xF3	; 243
 19c:	91 e0       	ldi	r25, 0x01	; 1
 19e:	01 97       	sbiw	r24, 0x01	; 1
 1a0:	f1 f7       	brne	.-4      	; 0x19e <Lcd_Init+0x18>
 1a2:	00 c0       	rjmp	.+0      	; 0x1a4 <Lcd_Init+0x1e>
 1a4:	00 00       	nop
 1a6:	88 e3       	ldi	r24, 0x38	; 56
 1a8:	9f df       	rcall	.-194    	; 0xe8 <Lcd_Cmd>
 1aa:	83 ef       	ldi	r24, 0xF3	; 243
 1ac:	91 e0       	ldi	r25, 0x01	; 1
 1ae:	01 97       	sbiw	r24, 0x01	; 1
 1b0:	f1 f7       	brne	.-4      	; 0x1ae <Lcd_Init+0x28>
 1b2:	00 c0       	rjmp	.+0      	; 0x1b4 <Lcd_Init+0x2e>
 1b4:	00 00       	nop
 1b6:	8c e0       	ldi	r24, 0x0C	; 12
 1b8:	97 df       	rcall	.-210    	; 0xe8 <Lcd_Cmd>
 1ba:	83 ef       	ldi	r24, 0xF3	; 243
 1bc:	91 e0       	ldi	r25, 0x01	; 1
 1be:	01 97       	sbiw	r24, 0x01	; 1
 1c0:	f1 f7       	brne	.-4      	; 0x1be <Lcd_Init+0x38>
 1c2:	00 c0       	rjmp	.+0      	; 0x1c4 <Lcd_Init+0x3e>
 1c4:	00 00       	nop
 1c6:	86 e0       	ldi	r24, 0x06	; 6
 1c8:	8f df       	rcall	.-226    	; 0xe8 <Lcd_Cmd>
 1ca:	83 ef       	ldi	r24, 0xF3	; 243
 1cc:	91 e0       	ldi	r25, 0x01	; 1
 1ce:	01 97       	sbiw	r24, 0x01	; 1
 1d0:	f1 f7       	brne	.-4      	; 0x1ce <Lcd_Init+0x48>
 1d2:	00 c0       	rjmp	.+0      	; 0x1d4 <Lcd_Init+0x4e>
 1d4:	00 00       	nop
 1d6:	ce cf       	rjmp	.-100    	; 0x174 <Lcd_Clear>
 1d8:	08 95       	ret

000001da <main>:
#include <stdio.h>
#include "Lcd.h"


int main(void)
{	
 1da:	cf 93       	push	r28
 1dc:	df 93       	push	r29
 1de:	cd b7       	in	r28, 0x3d	; 61
 1e0:	de b7       	in	r29, 0x3e	; 62
 1e2:	64 97       	sbiw	r28, 0x14	; 20
 1e4:	0f b6       	in	r0, 0x3f	; 63
 1e6:	f8 94       	cli
 1e8:	de bf       	out	0x3e, r29	; 62
 1ea:	0f be       	out	0x3f, r0	; 63
 1ec:	cd bf       	out	0x3d, r28	; 61
	Byte buf[20];			// 구구단을 담을 배열
	
	DDRF = 0xff;
 1ee:	8f ef       	ldi	r24, 0xFF	; 255
 1f0:	80 93 61 00 	sts	0x0061, r24	; 0x800061 <__TEXT_REGION_LENGTH__+0x7e0061>
	DDRG = 0x0f;
 1f4:	8f e0       	ldi	r24, 0x0F	; 15
 1f6:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <__TEXT_REGION_LENGTH__+0x7e0064>
	
	Lcd_Init();
 1fa:	c5 df       	rcall	.-118    	; 0x186 <Lcd_Init>
	Lcd_Clear();
 1fc:	bb df       	rcall	.-138    	; 0x174 <Lcd_Clear>
 1fe:	68 94       	set
	
	while (1)
	{
		for (int i = 2; i < 10; i++)
 200:	ee 24       	eor	r14, r14
 202:	e1 f8       	bld	r14, 1
 204:	f1 2c       	mov	r15, r1
 206:	36 c0       	rjmp	.+108    	; 0x274 <main+0x9a>
 208:	60 e0       	ldi	r22, 0x00	; 0
		{
			for (int j = 1; j < 10; j++)
			{
				Lcd_Pos(0,0);
 20a:	80 e0       	ldi	r24, 0x00	; 0
 20c:	a5 df       	rcall	.-182    	; 0x158 <Lcd_Pos>
 20e:	e0 9e       	mul	r14, r16
				sprintf(buf, "%d x %d = %d", i, j, i * j);		// sprintf를 이용하여 buf에 담고 구구단 출력
 210:	c0 01       	movw	r24, r0
 212:	e1 9e       	mul	r14, r17
 214:	90 0d       	add	r25, r0
 216:	f0 9e       	mul	r15, r16
 218:	90 0d       	add	r25, r0
 21a:	11 24       	eor	r1, r1
 21c:	9f 93       	push	r25
 21e:	8f 93       	push	r24
 220:	1f 93       	push	r17
 222:	0f 93       	push	r16
 224:	ff 92       	push	r15
 226:	ef 92       	push	r14
 228:	80 e0       	ldi	r24, 0x00	; 0
 22a:	91 e0       	ldi	r25, 0x01	; 1
 22c:	9f 93       	push	r25
 22e:	8f 93       	push	r24
 230:	ce 01       	movw	r24, r28
 232:	01 96       	adiw	r24, 0x01	; 1
 234:	6c 01       	movw	r12, r24
 236:	9f 93       	push	r25
 238:	8f 93       	push	r24
 23a:	21 d0       	rcall	.+66     	; 0x27e <sprintf>
				Lcd_STR(buf);
 23c:	c6 01       	movw	r24, r12
 23e:	74 df       	rcall	.-280    	; 0x128 <Lcd_STR>
 240:	9f ef       	ldi	r25, 0xFF	; 255
 242:	2f eb       	ldi	r18, 0xBF	; 191
 244:	8f e0       	ldi	r24, 0x0F	; 15
 246:	91 50       	subi	r25, 0x01	; 1
 248:	20 40       	sbci	r18, 0x00	; 0
 24a:	80 40       	sbci	r24, 0x00	; 0
 24c:	e1 f7       	brne	.-8      	; 0x246 <main+0x6c>
 24e:	00 c0       	rjmp	.+0      	; 0x250 <main+0x76>
 250:	00 00       	nop
				_delay_ms(700);
				Lcd_Clear();
 252:	90 df       	rcall	.-224    	; 0x174 <Lcd_Clear>
 254:	0f 5f       	subi	r16, 0xFF	; 255
	
	while (1)
	{
		for (int i = 2; i < 10; i++)
		{
			for (int j = 1; j < 10; j++)
 256:	1f 4f       	sbci	r17, 0xFF	; 255
 258:	0f b6       	in	r0, 0x3f	; 63
 25a:	f8 94       	cli
 25c:	de bf       	out	0x3e, r29	; 62
 25e:	0f be       	out	0x3f, r0	; 63
 260:	cd bf       	out	0x3d, r28	; 61
 262:	02 c0       	rjmp	.+4      	; 0x268 <main+0x8e>
 264:	01 e0       	ldi	r16, 0x01	; 1
 266:	10 e0       	ldi	r17, 0x00	; 0
 268:	0a 30       	cpi	r16, 0x0A	; 10
 26a:	11 05       	cpc	r17, r1
 26c:	6c f2       	brlt	.-102    	; 0x208 <main+0x2e>
 26e:	9f ef       	ldi	r25, 0xFF	; 255
	Lcd_Init();
	Lcd_Clear();
	
	while (1)
	{
		for (int i = 2; i < 10; i++)
 270:	e9 1a       	sub	r14, r25
 272:	f9 0a       	sbc	r15, r25
 274:	2a e0       	ldi	r18, 0x0A	; 10
 276:	e2 16       	cp	r14, r18
 278:	f1 04       	cpc	r15, r1
 27a:	a4 f3       	brlt	.-24     	; 0x264 <main+0x8a>
 27c:	c0 cf       	rjmp	.-128    	; 0x1fe <main+0x24>

0000027e <sprintf>:
 27e:	0f 93       	push	r16
 280:	1f 93       	push	r17
 282:	cf 93       	push	r28
 284:	df 93       	push	r29
 286:	cd b7       	in	r28, 0x3d	; 61
 288:	de b7       	in	r29, 0x3e	; 62
 28a:	2e 97       	sbiw	r28, 0x0e	; 14
 28c:	0f b6       	in	r0, 0x3f	; 63
 28e:	f8 94       	cli
 290:	de bf       	out	0x3e, r29	; 62
 292:	0f be       	out	0x3f, r0	; 63
 294:	cd bf       	out	0x3d, r28	; 61
 296:	0d 89       	ldd	r16, Y+21	; 0x15
 298:	1e 89       	ldd	r17, Y+22	; 0x16
 29a:	86 e0       	ldi	r24, 0x06	; 6
 29c:	8c 83       	std	Y+4, r24	; 0x04
 29e:	1a 83       	std	Y+2, r17	; 0x02
 2a0:	09 83       	std	Y+1, r16	; 0x01
 2a2:	8f ef       	ldi	r24, 0xFF	; 255
 2a4:	9f e7       	ldi	r25, 0x7F	; 127
 2a6:	9e 83       	std	Y+6, r25	; 0x06
 2a8:	8d 83       	std	Y+5, r24	; 0x05
 2aa:	ae 01       	movw	r20, r28
 2ac:	47 5e       	subi	r20, 0xE7	; 231
 2ae:	5f 4f       	sbci	r21, 0xFF	; 255
 2b0:	6f 89       	ldd	r22, Y+23	; 0x17
 2b2:	78 8d       	ldd	r23, Y+24	; 0x18
 2b4:	ce 01       	movw	r24, r28
 2b6:	01 96       	adiw	r24, 0x01	; 1
 2b8:	10 d0       	rcall	.+32     	; 0x2da <vfprintf>
 2ba:	ef 81       	ldd	r30, Y+7	; 0x07
 2bc:	f8 85       	ldd	r31, Y+8	; 0x08
 2be:	e0 0f       	add	r30, r16
 2c0:	f1 1f       	adc	r31, r17
 2c2:	10 82       	st	Z, r1
 2c4:	2e 96       	adiw	r28, 0x0e	; 14
 2c6:	0f b6       	in	r0, 0x3f	; 63
 2c8:	f8 94       	cli
 2ca:	de bf       	out	0x3e, r29	; 62
 2cc:	0f be       	out	0x3f, r0	; 63
 2ce:	cd bf       	out	0x3d, r28	; 61
 2d0:	df 91       	pop	r29
 2d2:	cf 91       	pop	r28
 2d4:	1f 91       	pop	r17
 2d6:	0f 91       	pop	r16
 2d8:	08 95       	ret

000002da <vfprintf>:
 2da:	2f 92       	push	r2
 2dc:	3f 92       	push	r3
 2de:	4f 92       	push	r4
 2e0:	5f 92       	push	r5
 2e2:	6f 92       	push	r6
 2e4:	7f 92       	push	r7
 2e6:	8f 92       	push	r8
 2e8:	9f 92       	push	r9
 2ea:	af 92       	push	r10
 2ec:	bf 92       	push	r11
 2ee:	cf 92       	push	r12
 2f0:	df 92       	push	r13
 2f2:	ef 92       	push	r14
 2f4:	ff 92       	push	r15
 2f6:	0f 93       	push	r16
 2f8:	1f 93       	push	r17
 2fa:	cf 93       	push	r28
 2fc:	df 93       	push	r29
 2fe:	cd b7       	in	r28, 0x3d	; 61
 300:	de b7       	in	r29, 0x3e	; 62
 302:	2b 97       	sbiw	r28, 0x0b	; 11
 304:	0f b6       	in	r0, 0x3f	; 63
 306:	f8 94       	cli
 308:	de bf       	out	0x3e, r29	; 62
 30a:	0f be       	out	0x3f, r0	; 63
 30c:	cd bf       	out	0x3d, r28	; 61
 30e:	6c 01       	movw	r12, r24
 310:	7b 01       	movw	r14, r22
 312:	8a 01       	movw	r16, r20
 314:	fc 01       	movw	r30, r24
 316:	17 82       	std	Z+7, r1	; 0x07
 318:	16 82       	std	Z+6, r1	; 0x06
 31a:	83 81       	ldd	r24, Z+3	; 0x03
 31c:	81 ff       	sbrs	r24, 1
 31e:	bf c1       	rjmp	.+894    	; 0x69e <__LOCK_REGION_LENGTH__+0x29e>
 320:	ce 01       	movw	r24, r28
 322:	01 96       	adiw	r24, 0x01	; 1
 324:	3c 01       	movw	r6, r24
 326:	f6 01       	movw	r30, r12
 328:	93 81       	ldd	r25, Z+3	; 0x03
 32a:	f7 01       	movw	r30, r14
 32c:	93 fd       	sbrc	r25, 3
 32e:	85 91       	lpm	r24, Z+
 330:	93 ff       	sbrs	r25, 3
 332:	81 91       	ld	r24, Z+
 334:	7f 01       	movw	r14, r30
 336:	88 23       	and	r24, r24
 338:	09 f4       	brne	.+2      	; 0x33c <vfprintf+0x62>
 33a:	ad c1       	rjmp	.+858    	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
 33c:	85 32       	cpi	r24, 0x25	; 37
 33e:	39 f4       	brne	.+14     	; 0x34e <vfprintf+0x74>
 340:	93 fd       	sbrc	r25, 3
 342:	85 91       	lpm	r24, Z+
 344:	93 ff       	sbrs	r25, 3
 346:	81 91       	ld	r24, Z+
 348:	7f 01       	movw	r14, r30
 34a:	85 32       	cpi	r24, 0x25	; 37
 34c:	21 f4       	brne	.+8      	; 0x356 <vfprintf+0x7c>
 34e:	b6 01       	movw	r22, r12
 350:	90 e0       	ldi	r25, 0x00	; 0
 352:	d6 d1       	rcall	.+940    	; 0x700 <fputc>
 354:	e8 cf       	rjmp	.-48     	; 0x326 <vfprintf+0x4c>
 356:	91 2c       	mov	r9, r1
 358:	21 2c       	mov	r2, r1
 35a:	31 2c       	mov	r3, r1
 35c:	ff e1       	ldi	r31, 0x1F	; 31
 35e:	f3 15       	cp	r31, r3
 360:	d8 f0       	brcs	.+54     	; 0x398 <vfprintf+0xbe>
 362:	8b 32       	cpi	r24, 0x2B	; 43
 364:	79 f0       	breq	.+30     	; 0x384 <vfprintf+0xaa>
 366:	38 f4       	brcc	.+14     	; 0x376 <vfprintf+0x9c>
 368:	80 32       	cpi	r24, 0x20	; 32
 36a:	79 f0       	breq	.+30     	; 0x38a <vfprintf+0xb0>
 36c:	83 32       	cpi	r24, 0x23	; 35
 36e:	a1 f4       	brne	.+40     	; 0x398 <vfprintf+0xbe>
 370:	23 2d       	mov	r18, r3
 372:	20 61       	ori	r18, 0x10	; 16
 374:	1d c0       	rjmp	.+58     	; 0x3b0 <vfprintf+0xd6>
 376:	8d 32       	cpi	r24, 0x2D	; 45
 378:	61 f0       	breq	.+24     	; 0x392 <vfprintf+0xb8>
 37a:	80 33       	cpi	r24, 0x30	; 48
 37c:	69 f4       	brne	.+26     	; 0x398 <vfprintf+0xbe>
 37e:	23 2d       	mov	r18, r3
 380:	21 60       	ori	r18, 0x01	; 1
 382:	16 c0       	rjmp	.+44     	; 0x3b0 <vfprintf+0xd6>
 384:	83 2d       	mov	r24, r3
 386:	82 60       	ori	r24, 0x02	; 2
 388:	38 2e       	mov	r3, r24
 38a:	e3 2d       	mov	r30, r3
 38c:	e4 60       	ori	r30, 0x04	; 4
 38e:	3e 2e       	mov	r3, r30
 390:	2a c0       	rjmp	.+84     	; 0x3e6 <vfprintf+0x10c>
 392:	f3 2d       	mov	r31, r3
 394:	f8 60       	ori	r31, 0x08	; 8
 396:	1d c0       	rjmp	.+58     	; 0x3d2 <vfprintf+0xf8>
 398:	37 fc       	sbrc	r3, 7
 39a:	2d c0       	rjmp	.+90     	; 0x3f6 <vfprintf+0x11c>
 39c:	20 ed       	ldi	r18, 0xD0	; 208
 39e:	28 0f       	add	r18, r24
 3a0:	2a 30       	cpi	r18, 0x0A	; 10
 3a2:	40 f0       	brcs	.+16     	; 0x3b4 <vfprintf+0xda>
 3a4:	8e 32       	cpi	r24, 0x2E	; 46
 3a6:	b9 f4       	brne	.+46     	; 0x3d6 <vfprintf+0xfc>
 3a8:	36 fc       	sbrc	r3, 6
 3aa:	75 c1       	rjmp	.+746    	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
 3ac:	23 2d       	mov	r18, r3
 3ae:	20 64       	ori	r18, 0x40	; 64
 3b0:	32 2e       	mov	r3, r18
 3b2:	19 c0       	rjmp	.+50     	; 0x3e6 <vfprintf+0x10c>
 3b4:	36 fe       	sbrs	r3, 6
 3b6:	06 c0       	rjmp	.+12     	; 0x3c4 <vfprintf+0xea>
 3b8:	8a e0       	ldi	r24, 0x0A	; 10
 3ba:	98 9e       	mul	r9, r24
 3bc:	20 0d       	add	r18, r0
 3be:	11 24       	eor	r1, r1
 3c0:	92 2e       	mov	r9, r18
 3c2:	11 c0       	rjmp	.+34     	; 0x3e6 <vfprintf+0x10c>
 3c4:	ea e0       	ldi	r30, 0x0A	; 10
 3c6:	2e 9e       	mul	r2, r30
 3c8:	20 0d       	add	r18, r0
 3ca:	11 24       	eor	r1, r1
 3cc:	22 2e       	mov	r2, r18
 3ce:	f3 2d       	mov	r31, r3
 3d0:	f0 62       	ori	r31, 0x20	; 32
 3d2:	3f 2e       	mov	r3, r31
 3d4:	08 c0       	rjmp	.+16     	; 0x3e6 <vfprintf+0x10c>
 3d6:	8c 36       	cpi	r24, 0x6C	; 108
 3d8:	21 f4       	brne	.+8      	; 0x3e2 <vfprintf+0x108>
 3da:	83 2d       	mov	r24, r3
 3dc:	80 68       	ori	r24, 0x80	; 128
 3de:	38 2e       	mov	r3, r24
 3e0:	02 c0       	rjmp	.+4      	; 0x3e6 <vfprintf+0x10c>
 3e2:	88 36       	cpi	r24, 0x68	; 104
 3e4:	41 f4       	brne	.+16     	; 0x3f6 <vfprintf+0x11c>
 3e6:	f7 01       	movw	r30, r14
 3e8:	93 fd       	sbrc	r25, 3
 3ea:	85 91       	lpm	r24, Z+
 3ec:	93 ff       	sbrs	r25, 3
 3ee:	81 91       	ld	r24, Z+
 3f0:	7f 01       	movw	r14, r30
 3f2:	81 11       	cpse	r24, r1
 3f4:	b3 cf       	rjmp	.-154    	; 0x35c <vfprintf+0x82>
 3f6:	98 2f       	mov	r25, r24
 3f8:	9f 7d       	andi	r25, 0xDF	; 223
 3fa:	95 54       	subi	r25, 0x45	; 69
 3fc:	93 30       	cpi	r25, 0x03	; 3
 3fe:	28 f4       	brcc	.+10     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 400:	0c 5f       	subi	r16, 0xFC	; 252
 402:	1f 4f       	sbci	r17, 0xFF	; 255
 404:	9f e3       	ldi	r25, 0x3F	; 63
 406:	99 83       	std	Y+1, r25	; 0x01
 408:	0d c0       	rjmp	.+26     	; 0x424 <__LOCK_REGION_LENGTH__+0x24>
 40a:	83 36       	cpi	r24, 0x63	; 99
 40c:	31 f0       	breq	.+12     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 40e:	83 37       	cpi	r24, 0x73	; 115
 410:	71 f0       	breq	.+28     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
 412:	83 35       	cpi	r24, 0x53	; 83
 414:	09 f0       	breq	.+2      	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 416:	55 c0       	rjmp	.+170    	; 0x4c2 <__LOCK_REGION_LENGTH__+0xc2>
 418:	20 c0       	rjmp	.+64     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 41a:	f8 01       	movw	r30, r16
 41c:	80 81       	ld	r24, Z
 41e:	89 83       	std	Y+1, r24	; 0x01
 420:	0e 5f       	subi	r16, 0xFE	; 254
 422:	1f 4f       	sbci	r17, 0xFF	; 255
 424:	88 24       	eor	r8, r8
 426:	83 94       	inc	r8
 428:	91 2c       	mov	r9, r1
 42a:	53 01       	movw	r10, r6
 42c:	12 c0       	rjmp	.+36     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 42e:	28 01       	movw	r4, r16
 430:	f2 e0       	ldi	r31, 0x02	; 2
 432:	4f 0e       	add	r4, r31
 434:	51 1c       	adc	r5, r1
 436:	f8 01       	movw	r30, r16
 438:	a0 80       	ld	r10, Z
 43a:	b1 80       	ldd	r11, Z+1	; 0x01
 43c:	36 fe       	sbrs	r3, 6
 43e:	03 c0       	rjmp	.+6      	; 0x446 <__LOCK_REGION_LENGTH__+0x46>
 440:	69 2d       	mov	r22, r9
 442:	70 e0       	ldi	r23, 0x00	; 0
 444:	02 c0       	rjmp	.+4      	; 0x44a <__LOCK_REGION_LENGTH__+0x4a>
 446:	6f ef       	ldi	r22, 0xFF	; 255
 448:	7f ef       	ldi	r23, 0xFF	; 255
 44a:	c5 01       	movw	r24, r10
 44c:	4e d1       	rcall	.+668    	; 0x6ea <strnlen>
 44e:	4c 01       	movw	r8, r24
 450:	82 01       	movw	r16, r4
 452:	f3 2d       	mov	r31, r3
 454:	ff 77       	andi	r31, 0x7F	; 127
 456:	3f 2e       	mov	r3, r31
 458:	15 c0       	rjmp	.+42     	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 45a:	28 01       	movw	r4, r16
 45c:	22 e0       	ldi	r18, 0x02	; 2
 45e:	42 0e       	add	r4, r18
 460:	51 1c       	adc	r5, r1
 462:	f8 01       	movw	r30, r16
 464:	a0 80       	ld	r10, Z
 466:	b1 80       	ldd	r11, Z+1	; 0x01
 468:	36 fe       	sbrs	r3, 6
 46a:	03 c0       	rjmp	.+6      	; 0x472 <__LOCK_REGION_LENGTH__+0x72>
 46c:	69 2d       	mov	r22, r9
 46e:	70 e0       	ldi	r23, 0x00	; 0
 470:	02 c0       	rjmp	.+4      	; 0x476 <__LOCK_REGION_LENGTH__+0x76>
 472:	6f ef       	ldi	r22, 0xFF	; 255
 474:	7f ef       	ldi	r23, 0xFF	; 255
 476:	c5 01       	movw	r24, r10
 478:	2d d1       	rcall	.+602    	; 0x6d4 <strnlen_P>
 47a:	4c 01       	movw	r8, r24
 47c:	f3 2d       	mov	r31, r3
 47e:	f0 68       	ori	r31, 0x80	; 128
 480:	3f 2e       	mov	r3, r31
 482:	82 01       	movw	r16, r4
 484:	33 fc       	sbrc	r3, 3
 486:	19 c0       	rjmp	.+50     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 488:	82 2d       	mov	r24, r2
 48a:	90 e0       	ldi	r25, 0x00	; 0
 48c:	88 16       	cp	r8, r24
 48e:	99 06       	cpc	r9, r25
 490:	a0 f4       	brcc	.+40     	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 492:	b6 01       	movw	r22, r12
 494:	80 e2       	ldi	r24, 0x20	; 32
 496:	90 e0       	ldi	r25, 0x00	; 0
 498:	33 d1       	rcall	.+614    	; 0x700 <fputc>
 49a:	2a 94       	dec	r2
 49c:	f5 cf       	rjmp	.-22     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 49e:	f5 01       	movw	r30, r10
 4a0:	37 fc       	sbrc	r3, 7
 4a2:	85 91       	lpm	r24, Z+
 4a4:	37 fe       	sbrs	r3, 7
 4a6:	81 91       	ld	r24, Z+
 4a8:	5f 01       	movw	r10, r30
 4aa:	b6 01       	movw	r22, r12
 4ac:	90 e0       	ldi	r25, 0x00	; 0
 4ae:	28 d1       	rcall	.+592    	; 0x700 <fputc>
 4b0:	21 10       	cpse	r2, r1
 4b2:	2a 94       	dec	r2
 4b4:	21 e0       	ldi	r18, 0x01	; 1
 4b6:	82 1a       	sub	r8, r18
 4b8:	91 08       	sbc	r9, r1
 4ba:	81 14       	cp	r8, r1
 4bc:	91 04       	cpc	r9, r1
 4be:	79 f7       	brne	.-34     	; 0x49e <__LOCK_REGION_LENGTH__+0x9e>
 4c0:	e1 c0       	rjmp	.+450    	; 0x684 <__LOCK_REGION_LENGTH__+0x284>
 4c2:	84 36       	cpi	r24, 0x64	; 100
 4c4:	11 f0       	breq	.+4      	; 0x4ca <__LOCK_REGION_LENGTH__+0xca>
 4c6:	89 36       	cpi	r24, 0x69	; 105
 4c8:	39 f5       	brne	.+78     	; 0x518 <__LOCK_REGION_LENGTH__+0x118>
 4ca:	f8 01       	movw	r30, r16
 4cc:	37 fe       	sbrs	r3, 7
 4ce:	07 c0       	rjmp	.+14     	; 0x4de <__LOCK_REGION_LENGTH__+0xde>
 4d0:	60 81       	ld	r22, Z
 4d2:	71 81       	ldd	r23, Z+1	; 0x01
 4d4:	82 81       	ldd	r24, Z+2	; 0x02
 4d6:	93 81       	ldd	r25, Z+3	; 0x03
 4d8:	0c 5f       	subi	r16, 0xFC	; 252
 4da:	1f 4f       	sbci	r17, 0xFF	; 255
 4dc:	08 c0       	rjmp	.+16     	; 0x4ee <__LOCK_REGION_LENGTH__+0xee>
 4de:	60 81       	ld	r22, Z
 4e0:	71 81       	ldd	r23, Z+1	; 0x01
 4e2:	07 2e       	mov	r0, r23
 4e4:	00 0c       	add	r0, r0
 4e6:	88 0b       	sbc	r24, r24
 4e8:	99 0b       	sbc	r25, r25
 4ea:	0e 5f       	subi	r16, 0xFE	; 254
 4ec:	1f 4f       	sbci	r17, 0xFF	; 255
 4ee:	f3 2d       	mov	r31, r3
 4f0:	ff 76       	andi	r31, 0x6F	; 111
 4f2:	3f 2e       	mov	r3, r31
 4f4:	97 ff       	sbrs	r25, 7
 4f6:	09 c0       	rjmp	.+18     	; 0x50a <__LOCK_REGION_LENGTH__+0x10a>
 4f8:	90 95       	com	r25
 4fa:	80 95       	com	r24
 4fc:	70 95       	com	r23
 4fe:	61 95       	neg	r22
 500:	7f 4f       	sbci	r23, 0xFF	; 255
 502:	8f 4f       	sbci	r24, 0xFF	; 255
 504:	9f 4f       	sbci	r25, 0xFF	; 255
 506:	f0 68       	ori	r31, 0x80	; 128
 508:	3f 2e       	mov	r3, r31
 50a:	2a e0       	ldi	r18, 0x0A	; 10
 50c:	30 e0       	ldi	r19, 0x00	; 0
 50e:	a3 01       	movw	r20, r6
 510:	33 d1       	rcall	.+614    	; 0x778 <__ultoa_invert>
 512:	88 2e       	mov	r8, r24
 514:	86 18       	sub	r8, r6
 516:	44 c0       	rjmp	.+136    	; 0x5a0 <__LOCK_REGION_LENGTH__+0x1a0>
 518:	85 37       	cpi	r24, 0x75	; 117
 51a:	31 f4       	brne	.+12     	; 0x528 <__LOCK_REGION_LENGTH__+0x128>
 51c:	23 2d       	mov	r18, r3
 51e:	2f 7e       	andi	r18, 0xEF	; 239
 520:	b2 2e       	mov	r11, r18
 522:	2a e0       	ldi	r18, 0x0A	; 10
 524:	30 e0       	ldi	r19, 0x00	; 0
 526:	25 c0       	rjmp	.+74     	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 528:	93 2d       	mov	r25, r3
 52a:	99 7f       	andi	r25, 0xF9	; 249
 52c:	b9 2e       	mov	r11, r25
 52e:	8f 36       	cpi	r24, 0x6F	; 111
 530:	c1 f0       	breq	.+48     	; 0x562 <__LOCK_REGION_LENGTH__+0x162>
 532:	18 f4       	brcc	.+6      	; 0x53a <__LOCK_REGION_LENGTH__+0x13a>
 534:	88 35       	cpi	r24, 0x58	; 88
 536:	79 f0       	breq	.+30     	; 0x556 <__LOCK_REGION_LENGTH__+0x156>
 538:	ae c0       	rjmp	.+348    	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
 53a:	80 37       	cpi	r24, 0x70	; 112
 53c:	19 f0       	breq	.+6      	; 0x544 <__LOCK_REGION_LENGTH__+0x144>
 53e:	88 37       	cpi	r24, 0x78	; 120
 540:	21 f0       	breq	.+8      	; 0x54a <__LOCK_REGION_LENGTH__+0x14a>
 542:	a9 c0       	rjmp	.+338    	; 0x696 <__LOCK_REGION_LENGTH__+0x296>
 544:	e9 2f       	mov	r30, r25
 546:	e0 61       	ori	r30, 0x10	; 16
 548:	be 2e       	mov	r11, r30
 54a:	b4 fe       	sbrs	r11, 4
 54c:	0d c0       	rjmp	.+26     	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 54e:	fb 2d       	mov	r31, r11
 550:	f4 60       	ori	r31, 0x04	; 4
 552:	bf 2e       	mov	r11, r31
 554:	09 c0       	rjmp	.+18     	; 0x568 <__LOCK_REGION_LENGTH__+0x168>
 556:	34 fe       	sbrs	r3, 4
 558:	0a c0       	rjmp	.+20     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 55a:	29 2f       	mov	r18, r25
 55c:	26 60       	ori	r18, 0x06	; 6
 55e:	b2 2e       	mov	r11, r18
 560:	06 c0       	rjmp	.+12     	; 0x56e <__LOCK_REGION_LENGTH__+0x16e>
 562:	28 e0       	ldi	r18, 0x08	; 8
 564:	30 e0       	ldi	r19, 0x00	; 0
 566:	05 c0       	rjmp	.+10     	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 568:	20 e1       	ldi	r18, 0x10	; 16
 56a:	30 e0       	ldi	r19, 0x00	; 0
 56c:	02 c0       	rjmp	.+4      	; 0x572 <__LOCK_REGION_LENGTH__+0x172>
 56e:	20 e1       	ldi	r18, 0x10	; 16
 570:	32 e0       	ldi	r19, 0x02	; 2
 572:	f8 01       	movw	r30, r16
 574:	b7 fe       	sbrs	r11, 7
 576:	07 c0       	rjmp	.+14     	; 0x586 <__LOCK_REGION_LENGTH__+0x186>
 578:	60 81       	ld	r22, Z
 57a:	71 81       	ldd	r23, Z+1	; 0x01
 57c:	82 81       	ldd	r24, Z+2	; 0x02
 57e:	93 81       	ldd	r25, Z+3	; 0x03
 580:	0c 5f       	subi	r16, 0xFC	; 252
 582:	1f 4f       	sbci	r17, 0xFF	; 255
 584:	06 c0       	rjmp	.+12     	; 0x592 <__LOCK_REGION_LENGTH__+0x192>
 586:	60 81       	ld	r22, Z
 588:	71 81       	ldd	r23, Z+1	; 0x01
 58a:	80 e0       	ldi	r24, 0x00	; 0
 58c:	90 e0       	ldi	r25, 0x00	; 0
 58e:	0e 5f       	subi	r16, 0xFE	; 254
 590:	1f 4f       	sbci	r17, 0xFF	; 255
 592:	a3 01       	movw	r20, r6
 594:	f1 d0       	rcall	.+482    	; 0x778 <__ultoa_invert>
 596:	88 2e       	mov	r8, r24
 598:	86 18       	sub	r8, r6
 59a:	fb 2d       	mov	r31, r11
 59c:	ff 77       	andi	r31, 0x7F	; 127
 59e:	3f 2e       	mov	r3, r31
 5a0:	36 fe       	sbrs	r3, 6
 5a2:	0d c0       	rjmp	.+26     	; 0x5be <__LOCK_REGION_LENGTH__+0x1be>
 5a4:	23 2d       	mov	r18, r3
 5a6:	2e 7f       	andi	r18, 0xFE	; 254
 5a8:	a2 2e       	mov	r10, r18
 5aa:	89 14       	cp	r8, r9
 5ac:	58 f4       	brcc	.+22     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 5ae:	34 fe       	sbrs	r3, 4
 5b0:	0b c0       	rjmp	.+22     	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
 5b2:	32 fc       	sbrc	r3, 2
 5b4:	09 c0       	rjmp	.+18     	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
 5b6:	83 2d       	mov	r24, r3
 5b8:	8e 7e       	andi	r24, 0xEE	; 238
 5ba:	a8 2e       	mov	r10, r24
 5bc:	05 c0       	rjmp	.+10     	; 0x5c8 <__LOCK_REGION_LENGTH__+0x1c8>
 5be:	b8 2c       	mov	r11, r8
 5c0:	a3 2c       	mov	r10, r3
 5c2:	03 c0       	rjmp	.+6      	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5c4:	b8 2c       	mov	r11, r8
 5c6:	01 c0       	rjmp	.+2      	; 0x5ca <__LOCK_REGION_LENGTH__+0x1ca>
 5c8:	b9 2c       	mov	r11, r9
 5ca:	a4 fe       	sbrs	r10, 4
 5cc:	0f c0       	rjmp	.+30     	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
 5ce:	fe 01       	movw	r30, r28
 5d0:	e8 0d       	add	r30, r8
 5d2:	f1 1d       	adc	r31, r1
 5d4:	80 81       	ld	r24, Z
 5d6:	80 33       	cpi	r24, 0x30	; 48
 5d8:	21 f4       	brne	.+8      	; 0x5e2 <__LOCK_REGION_LENGTH__+0x1e2>
 5da:	9a 2d       	mov	r25, r10
 5dc:	99 7e       	andi	r25, 0xE9	; 233
 5de:	a9 2e       	mov	r10, r25
 5e0:	09 c0       	rjmp	.+18     	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5e2:	a2 fe       	sbrs	r10, 2
 5e4:	06 c0       	rjmp	.+12     	; 0x5f2 <__LOCK_REGION_LENGTH__+0x1f2>
 5e6:	b3 94       	inc	r11
 5e8:	b3 94       	inc	r11
 5ea:	04 c0       	rjmp	.+8      	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5ec:	8a 2d       	mov	r24, r10
 5ee:	86 78       	andi	r24, 0x86	; 134
 5f0:	09 f0       	breq	.+2      	; 0x5f4 <__LOCK_REGION_LENGTH__+0x1f4>
 5f2:	b3 94       	inc	r11
 5f4:	a3 fc       	sbrc	r10, 3
 5f6:	10 c0       	rjmp	.+32     	; 0x618 <__LOCK_REGION_LENGTH__+0x218>
 5f8:	a0 fe       	sbrs	r10, 0
 5fa:	06 c0       	rjmp	.+12     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 5fc:	b2 14       	cp	r11, r2
 5fe:	80 f4       	brcc	.+32     	; 0x620 <__LOCK_REGION_LENGTH__+0x220>
 600:	28 0c       	add	r2, r8
 602:	92 2c       	mov	r9, r2
 604:	9b 18       	sub	r9, r11
 606:	0d c0       	rjmp	.+26     	; 0x622 <__LOCK_REGION_LENGTH__+0x222>
 608:	b2 14       	cp	r11, r2
 60a:	58 f4       	brcc	.+22     	; 0x622 <__LOCK_REGION_LENGTH__+0x222>
 60c:	b6 01       	movw	r22, r12
 60e:	80 e2       	ldi	r24, 0x20	; 32
 610:	90 e0       	ldi	r25, 0x00	; 0
 612:	76 d0       	rcall	.+236    	; 0x700 <fputc>
 614:	b3 94       	inc	r11
 616:	f8 cf       	rjmp	.-16     	; 0x608 <__LOCK_REGION_LENGTH__+0x208>
 618:	b2 14       	cp	r11, r2
 61a:	18 f4       	brcc	.+6      	; 0x622 <__LOCK_REGION_LENGTH__+0x222>
 61c:	2b 18       	sub	r2, r11
 61e:	02 c0       	rjmp	.+4      	; 0x624 <__LOCK_REGION_LENGTH__+0x224>
 620:	98 2c       	mov	r9, r8
 622:	21 2c       	mov	r2, r1
 624:	a4 fe       	sbrs	r10, 4
 626:	0f c0       	rjmp	.+30     	; 0x646 <__LOCK_REGION_LENGTH__+0x246>
 628:	b6 01       	movw	r22, r12
 62a:	80 e3       	ldi	r24, 0x30	; 48
 62c:	90 e0       	ldi	r25, 0x00	; 0
 62e:	68 d0       	rcall	.+208    	; 0x700 <fputc>
 630:	a2 fe       	sbrs	r10, 2
 632:	16 c0       	rjmp	.+44     	; 0x660 <__LOCK_REGION_LENGTH__+0x260>
 634:	a1 fc       	sbrc	r10, 1
 636:	03 c0       	rjmp	.+6      	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 638:	88 e7       	ldi	r24, 0x78	; 120
 63a:	90 e0       	ldi	r25, 0x00	; 0
 63c:	02 c0       	rjmp	.+4      	; 0x642 <__LOCK_REGION_LENGTH__+0x242>
 63e:	88 e5       	ldi	r24, 0x58	; 88
 640:	90 e0       	ldi	r25, 0x00	; 0
 642:	b6 01       	movw	r22, r12
 644:	0c c0       	rjmp	.+24     	; 0x65e <__LOCK_REGION_LENGTH__+0x25e>
 646:	8a 2d       	mov	r24, r10
 648:	86 78       	andi	r24, 0x86	; 134
 64a:	51 f0       	breq	.+20     	; 0x660 <__LOCK_REGION_LENGTH__+0x260>
 64c:	a1 fe       	sbrs	r10, 1
 64e:	02 c0       	rjmp	.+4      	; 0x654 <__LOCK_REGION_LENGTH__+0x254>
 650:	8b e2       	ldi	r24, 0x2B	; 43
 652:	01 c0       	rjmp	.+2      	; 0x656 <__LOCK_REGION_LENGTH__+0x256>
 654:	80 e2       	ldi	r24, 0x20	; 32
 656:	a7 fc       	sbrc	r10, 7
 658:	8d e2       	ldi	r24, 0x2D	; 45
 65a:	b6 01       	movw	r22, r12
 65c:	90 e0       	ldi	r25, 0x00	; 0
 65e:	50 d0       	rcall	.+160    	; 0x700 <fputc>
 660:	89 14       	cp	r8, r9
 662:	30 f4       	brcc	.+12     	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
 664:	b6 01       	movw	r22, r12
 666:	80 e3       	ldi	r24, 0x30	; 48
 668:	90 e0       	ldi	r25, 0x00	; 0
 66a:	4a d0       	rcall	.+148    	; 0x700 <fputc>
 66c:	9a 94       	dec	r9
 66e:	f8 cf       	rjmp	.-16     	; 0x660 <__LOCK_REGION_LENGTH__+0x260>
 670:	8a 94       	dec	r8
 672:	f3 01       	movw	r30, r6
 674:	e8 0d       	add	r30, r8
 676:	f1 1d       	adc	r31, r1
 678:	80 81       	ld	r24, Z
 67a:	b6 01       	movw	r22, r12
 67c:	90 e0       	ldi	r25, 0x00	; 0
 67e:	40 d0       	rcall	.+128    	; 0x700 <fputc>
 680:	81 10       	cpse	r8, r1
 682:	f6 cf       	rjmp	.-20     	; 0x670 <__LOCK_REGION_LENGTH__+0x270>
 684:	22 20       	and	r2, r2
 686:	09 f4       	brne	.+2      	; 0x68a <__LOCK_REGION_LENGTH__+0x28a>
 688:	4e ce       	rjmp	.-868    	; 0x326 <vfprintf+0x4c>
 68a:	b6 01       	movw	r22, r12
 68c:	80 e2       	ldi	r24, 0x20	; 32
 68e:	90 e0       	ldi	r25, 0x00	; 0
 690:	37 d0       	rcall	.+110    	; 0x700 <fputc>
 692:	2a 94       	dec	r2
 694:	f7 cf       	rjmp	.-18     	; 0x684 <__LOCK_REGION_LENGTH__+0x284>
 696:	f6 01       	movw	r30, r12
 698:	86 81       	ldd	r24, Z+6	; 0x06
 69a:	97 81       	ldd	r25, Z+7	; 0x07
 69c:	02 c0       	rjmp	.+4      	; 0x6a2 <__LOCK_REGION_LENGTH__+0x2a2>
 69e:	8f ef       	ldi	r24, 0xFF	; 255
 6a0:	9f ef       	ldi	r25, 0xFF	; 255
 6a2:	2b 96       	adiw	r28, 0x0b	; 11
 6a4:	0f b6       	in	r0, 0x3f	; 63
 6a6:	f8 94       	cli
 6a8:	de bf       	out	0x3e, r29	; 62
 6aa:	0f be       	out	0x3f, r0	; 63
 6ac:	cd bf       	out	0x3d, r28	; 61
 6ae:	df 91       	pop	r29
 6b0:	cf 91       	pop	r28
 6b2:	1f 91       	pop	r17
 6b4:	0f 91       	pop	r16
 6b6:	ff 90       	pop	r15
 6b8:	ef 90       	pop	r14
 6ba:	df 90       	pop	r13
 6bc:	cf 90       	pop	r12
 6be:	bf 90       	pop	r11
 6c0:	af 90       	pop	r10
 6c2:	9f 90       	pop	r9
 6c4:	8f 90       	pop	r8
 6c6:	7f 90       	pop	r7
 6c8:	6f 90       	pop	r6
 6ca:	5f 90       	pop	r5
 6cc:	4f 90       	pop	r4
 6ce:	3f 90       	pop	r3
 6d0:	2f 90       	pop	r2
 6d2:	08 95       	ret

000006d4 <strnlen_P>:
 6d4:	fc 01       	movw	r30, r24
 6d6:	05 90       	lpm	r0, Z+
 6d8:	61 50       	subi	r22, 0x01	; 1
 6da:	70 40       	sbci	r23, 0x00	; 0
 6dc:	01 10       	cpse	r0, r1
 6de:	d8 f7       	brcc	.-10     	; 0x6d6 <strnlen_P+0x2>
 6e0:	80 95       	com	r24
 6e2:	90 95       	com	r25
 6e4:	8e 0f       	add	r24, r30
 6e6:	9f 1f       	adc	r25, r31
 6e8:	08 95       	ret

000006ea <strnlen>:
 6ea:	fc 01       	movw	r30, r24
 6ec:	61 50       	subi	r22, 0x01	; 1
 6ee:	70 40       	sbci	r23, 0x00	; 0
 6f0:	01 90       	ld	r0, Z+
 6f2:	01 10       	cpse	r0, r1
 6f4:	d8 f7       	brcc	.-10     	; 0x6ec <strnlen+0x2>
 6f6:	80 95       	com	r24
 6f8:	90 95       	com	r25
 6fa:	8e 0f       	add	r24, r30
 6fc:	9f 1f       	adc	r25, r31
 6fe:	08 95       	ret

00000700 <fputc>:
 700:	0f 93       	push	r16
 702:	1f 93       	push	r17
 704:	cf 93       	push	r28
 706:	df 93       	push	r29
 708:	fb 01       	movw	r30, r22
 70a:	23 81       	ldd	r18, Z+3	; 0x03
 70c:	21 fd       	sbrc	r18, 1
 70e:	03 c0       	rjmp	.+6      	; 0x716 <fputc+0x16>
 710:	8f ef       	ldi	r24, 0xFF	; 255
 712:	9f ef       	ldi	r25, 0xFF	; 255
 714:	2c c0       	rjmp	.+88     	; 0x76e <fputc+0x6e>
 716:	22 ff       	sbrs	r18, 2
 718:	16 c0       	rjmp	.+44     	; 0x746 <fputc+0x46>
 71a:	46 81       	ldd	r20, Z+6	; 0x06
 71c:	57 81       	ldd	r21, Z+7	; 0x07
 71e:	24 81       	ldd	r18, Z+4	; 0x04
 720:	35 81       	ldd	r19, Z+5	; 0x05
 722:	42 17       	cp	r20, r18
 724:	53 07       	cpc	r21, r19
 726:	44 f4       	brge	.+16     	; 0x738 <fputc+0x38>
 728:	a0 81       	ld	r26, Z
 72a:	b1 81       	ldd	r27, Z+1	; 0x01
 72c:	9d 01       	movw	r18, r26
 72e:	2f 5f       	subi	r18, 0xFF	; 255
 730:	3f 4f       	sbci	r19, 0xFF	; 255
 732:	31 83       	std	Z+1, r19	; 0x01
 734:	20 83       	st	Z, r18
 736:	8c 93       	st	X, r24
 738:	26 81       	ldd	r18, Z+6	; 0x06
 73a:	37 81       	ldd	r19, Z+7	; 0x07
 73c:	2f 5f       	subi	r18, 0xFF	; 255
 73e:	3f 4f       	sbci	r19, 0xFF	; 255
 740:	37 83       	std	Z+7, r19	; 0x07
 742:	26 83       	std	Z+6, r18	; 0x06
 744:	14 c0       	rjmp	.+40     	; 0x76e <fputc+0x6e>
 746:	8b 01       	movw	r16, r22
 748:	ec 01       	movw	r28, r24
 74a:	fb 01       	movw	r30, r22
 74c:	00 84       	ldd	r0, Z+8	; 0x08
 74e:	f1 85       	ldd	r31, Z+9	; 0x09
 750:	e0 2d       	mov	r30, r0
 752:	09 95       	icall
 754:	89 2b       	or	r24, r25
 756:	e1 f6       	brne	.-72     	; 0x710 <fputc+0x10>
 758:	d8 01       	movw	r26, r16
 75a:	16 96       	adiw	r26, 0x06	; 6
 75c:	8d 91       	ld	r24, X+
 75e:	9c 91       	ld	r25, X
 760:	17 97       	sbiw	r26, 0x07	; 7
 762:	01 96       	adiw	r24, 0x01	; 1
 764:	17 96       	adiw	r26, 0x07	; 7
 766:	9c 93       	st	X, r25
 768:	8e 93       	st	-X, r24
 76a:	16 97       	sbiw	r26, 0x06	; 6
 76c:	ce 01       	movw	r24, r28
 76e:	df 91       	pop	r29
 770:	cf 91       	pop	r28
 772:	1f 91       	pop	r17
 774:	0f 91       	pop	r16
 776:	08 95       	ret

00000778 <__ultoa_invert>:
 778:	fa 01       	movw	r30, r20
 77a:	aa 27       	eor	r26, r26
 77c:	28 30       	cpi	r18, 0x08	; 8
 77e:	51 f1       	breq	.+84     	; 0x7d4 <__ultoa_invert+0x5c>
 780:	20 31       	cpi	r18, 0x10	; 16
 782:	81 f1       	breq	.+96     	; 0x7e4 <__ultoa_invert+0x6c>
 784:	e8 94       	clt
 786:	6f 93       	push	r22
 788:	6e 7f       	andi	r22, 0xFE	; 254
 78a:	6e 5f       	subi	r22, 0xFE	; 254
 78c:	7f 4f       	sbci	r23, 0xFF	; 255
 78e:	8f 4f       	sbci	r24, 0xFF	; 255
 790:	9f 4f       	sbci	r25, 0xFF	; 255
 792:	af 4f       	sbci	r26, 0xFF	; 255
 794:	b1 e0       	ldi	r27, 0x01	; 1
 796:	3e d0       	rcall	.+124    	; 0x814 <__ultoa_invert+0x9c>
 798:	b4 e0       	ldi	r27, 0x04	; 4
 79a:	3c d0       	rcall	.+120    	; 0x814 <__ultoa_invert+0x9c>
 79c:	67 0f       	add	r22, r23
 79e:	78 1f       	adc	r23, r24
 7a0:	89 1f       	adc	r24, r25
 7a2:	9a 1f       	adc	r25, r26
 7a4:	a1 1d       	adc	r26, r1
 7a6:	68 0f       	add	r22, r24
 7a8:	79 1f       	adc	r23, r25
 7aa:	8a 1f       	adc	r24, r26
 7ac:	91 1d       	adc	r25, r1
 7ae:	a1 1d       	adc	r26, r1
 7b0:	6a 0f       	add	r22, r26
 7b2:	71 1d       	adc	r23, r1
 7b4:	81 1d       	adc	r24, r1
 7b6:	91 1d       	adc	r25, r1
 7b8:	a1 1d       	adc	r26, r1
 7ba:	20 d0       	rcall	.+64     	; 0x7fc <__ultoa_invert+0x84>
 7bc:	09 f4       	brne	.+2      	; 0x7c0 <__ultoa_invert+0x48>
 7be:	68 94       	set
 7c0:	3f 91       	pop	r19
 7c2:	2a e0       	ldi	r18, 0x0A	; 10
 7c4:	26 9f       	mul	r18, r22
 7c6:	11 24       	eor	r1, r1
 7c8:	30 19       	sub	r19, r0
 7ca:	30 5d       	subi	r19, 0xD0	; 208
 7cc:	31 93       	st	Z+, r19
 7ce:	de f6       	brtc	.-74     	; 0x786 <__ultoa_invert+0xe>
 7d0:	cf 01       	movw	r24, r30
 7d2:	08 95       	ret
 7d4:	46 2f       	mov	r20, r22
 7d6:	47 70       	andi	r20, 0x07	; 7
 7d8:	40 5d       	subi	r20, 0xD0	; 208
 7da:	41 93       	st	Z+, r20
 7dc:	b3 e0       	ldi	r27, 0x03	; 3
 7de:	0f d0       	rcall	.+30     	; 0x7fe <__ultoa_invert+0x86>
 7e0:	c9 f7       	brne	.-14     	; 0x7d4 <__ultoa_invert+0x5c>
 7e2:	f6 cf       	rjmp	.-20     	; 0x7d0 <__ultoa_invert+0x58>
 7e4:	46 2f       	mov	r20, r22
 7e6:	4f 70       	andi	r20, 0x0F	; 15
 7e8:	40 5d       	subi	r20, 0xD0	; 208
 7ea:	4a 33       	cpi	r20, 0x3A	; 58
 7ec:	18 f0       	brcs	.+6      	; 0x7f4 <__ultoa_invert+0x7c>
 7ee:	49 5d       	subi	r20, 0xD9	; 217
 7f0:	31 fd       	sbrc	r19, 1
 7f2:	40 52       	subi	r20, 0x20	; 32
 7f4:	41 93       	st	Z+, r20
 7f6:	02 d0       	rcall	.+4      	; 0x7fc <__ultoa_invert+0x84>
 7f8:	a9 f7       	brne	.-22     	; 0x7e4 <__ultoa_invert+0x6c>
 7fa:	ea cf       	rjmp	.-44     	; 0x7d0 <__ultoa_invert+0x58>
 7fc:	b4 e0       	ldi	r27, 0x04	; 4
 7fe:	a6 95       	lsr	r26
 800:	97 95       	ror	r25
 802:	87 95       	ror	r24
 804:	77 95       	ror	r23
 806:	67 95       	ror	r22
 808:	ba 95       	dec	r27
 80a:	c9 f7       	brne	.-14     	; 0x7fe <__ultoa_invert+0x86>
 80c:	00 97       	sbiw	r24, 0x00	; 0
 80e:	61 05       	cpc	r22, r1
 810:	71 05       	cpc	r23, r1
 812:	08 95       	ret
 814:	9b 01       	movw	r18, r22
 816:	ac 01       	movw	r20, r24
 818:	0a 2e       	mov	r0, r26
 81a:	06 94       	lsr	r0
 81c:	57 95       	ror	r21
 81e:	47 95       	ror	r20
 820:	37 95       	ror	r19
 822:	27 95       	ror	r18
 824:	ba 95       	dec	r27
 826:	c9 f7       	brne	.-14     	; 0x81a <__ultoa_invert+0xa2>
 828:	62 0f       	add	r22, r18
 82a:	73 1f       	adc	r23, r19
 82c:	84 1f       	adc	r24, r20
 82e:	95 1f       	adc	r25, r21
 830:	a0 1d       	adc	r26, r0
 832:	08 95       	ret

00000834 <_exit>:
 834:	f8 94       	cli

00000836 <__stop_program>:
 836:	ff cf       	rjmp	.-2      	; 0x836 <__stop_program>
